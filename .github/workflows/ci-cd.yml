name: CI/CD Workflow
run-name: CI/CD for ${{ github.ref_name == 'main' && 'Production' || 'PR' }}
on:
    push:
        branches:
          - main
        paths: 
          - 'infrastructure/**'
          - '.github/workflows/**'
    pull_request: 
        types: 
          - opened
          - synchronize
          - reopened
        paths:
          - 'infrastructure/**'
          - '.github/workflows/**'
          
concurrency: 
    group: deploy-${{ github.ref_name == 'main' && 'production' || 'staging' }}
    cancel-in-progress: true

env:
    STORAGE_ACCOUNT_TEMPLATE_PATH: './infrastructure/storage-account/main.bicep'
    STORAGE_ACCOUNT_PARAMETERS_PATH: './infrastructure/storage-account/parameters.bicepparam'
    COST_EXPORTS_TEMPLATE_PATH: './infrastructure/cost-exports/main.bicep'
    COST_EXPORTS_PARAMETERS_PATH: './infrastructure/cost-exports/parameters.bicepparam'
    AZ_LOCATION: ${{ vars.AZ_LOCATION || 'westeurope' }}
    AZ_ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'staging' }}

jobs:
    lint:
        name: Lint Bicep
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Lint Bicep
              run: |
                az bicep install
                echo "Checking storage account template"
                az bicep build --file ${{ env.STORAGE_ACCOUNT_TEMPLATE_PATH }} 2>&1 | tee bicep_build.log
                if grep -q -i -E "warning|error" bicep_build.log; then
                    echo -e "\tBicep linting found warnings."
                    exit 1
                else
                    echo -e "\tStorage account template linting passed without warnings."
                fi
                echo ""
                echo "Checking cost exports template"
                az bicep build --file ${{ env.COST_EXPORTS_TEMPLATE_PATH }} 2>&1 | tee bicep_build.log
                if grep -q -i -E "warning|error" bicep_build.log; then
                    echo -e "\tBicep linting found warnings."
                    exit 1
                else
                    echo -e "\tCost exports template linting passed without warnings."
                fi

    what-if:
        name: What-If (vs production)
        runs-on: ubuntu-24.04
        if: github.event_name == 'pull_request' 
        needs: lint
        environment: production
        env:
            GH_TOKEN: ${{ github.token }}
        permissions:
            id-token: write
            contents: read
            pull-requests: write
        steps:
            - name: Capture timestamp
              run: echo "WORKFLOW_TS=$(TZ='Europe/Copenhagen' date)" >> $GITHUB_ENV

            - name: Checkout
              uses: actions/checkout@v4

            - name: Azure Login
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
            - name: What-if
              uses: azure/cli@v2
              with:
                azcliversion: latest
                inlineScript: |
                    whatif=$(az deployment sub create --what-if --location ${{ env.AZ_LOCATION }} --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --template-file ${{ env.STORAGE_ACCOUNT_TEMPLATE_PATH }} --parameters ${{ env.STORAGE_ACCOUNT_PARAMETERS_PATH }} --what-if-result-format FullResourcePayloads)
                    echo "${whatif}"
                    {
                        echo "WHAT_IF_RESULT<<EOF"
                        echo "${whatif}"
                        echo "EOF"
                    } >> $GITHUB_ENV
            
            - name: Update PR
              run: |
                gh pr comment ${{ github.event.pull_request.number }} --body "$(cat <<EOF
                ### What-if analysis result
                \`\`\`text
                ${WHAT_IF_RESULT}
                \`\`\`
                From commit: ${{ github.event.pull_request.head.sha }}
                Started at: \`${WORKFLOW_TS}\`
                EOF
                )"
    deploy:
        name: Deployment - ${{ github.ref_name == 'main' && 'Production' || 'Staging' }}
        runs-on: ubuntu-24.04
        environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
        needs: lint
        permissions:
            id-token: write
            contents: read
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Azure Login
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
            - name: Deploy
              uses: azure/cli@v2
              with:
                azcliversion: latest
                inlineScript: |
                    az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                    az stack sub create --location ${{ env.AZ_LOCATION }} --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --template-file ${{ env.STORAGE_ACCOUNT_TEMPLATE_PATH }} --parameters ${{ env.STORAGE_ACCOUNT_PARAMETERS_PATH }} --name "cost-mgmt" --action-on-unmanage deleteAll --deny-settings-mode none --yes
